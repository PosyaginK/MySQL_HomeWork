/*Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение. Агрегация данных”. 
 * Работаем с БД vk и данными, которые вы сгенерировали ранее:*/
USE vk;

/* 1. Пусть задан некоторый пользователь. 
 * Из всех пользователей соц. сети найдите человека, который больше всех общался с выбранным пользователем (написал ему сообщений).*/

-- Посмотрим сколько сообщений написали каждому пользователю
SELECT 
	DISTINCT to_user_id,
	COUNT(*) as 'cnt' FROM messages  GROUP BY to_user_id ORDER BY cnt DESC
; -- В моей базе больше всего сообщений было написано пользователю с id = 31

-- Посмотрим информацию о сообщениях пользователю 31
SELECT from_user_id,  to_user_id, COUNT(*) as 'cnt'
FROM messages 
WHERE to_user_id = 31 
GROUP BY from_user_id 
ORDER BY cnt DESC
; -- Больше всего нашему юзеру писал пользователь с id = 17 

-- Получим его айдишник селект запросом:

SELECT from_user_id FROM messages WHERE to_user_id = 31 GROUP BY from_user_id ORDER BY COUNT(*) DESC LIMIT 1 
; -- Селект запрос для вывода айдишника пользователя, который больше всех писал нашему юзеру

-- Теперь можно вывести информацию о пользователе, который больше всего писал заданному юзеру

SELECT *
FROM users 
WHERE id = (SELECT from_user_id FROM messages WHERE to_user_id = 31 GROUP BY from_user_id ORDER BY COUNT(*) DESC LIMIT 1)
;

/*---------------------------------------------------------------------------------------------------------------------------*/

/* 2. Подсчитать общее количество лайков, которые получили пользователи младше 10 лет..*/

-- Айдишники пользователей младше 10 лет:
SELECT user_id FROM profiles WHERE TIMESTAMPDIFF(YEAR, birthday, NOW()) < 10
;

-- Медиа, которые принадлежат пользователям до 10 лет:

SELECT id, media_type_id, user_id, created_at 
FROM media 
WHERE user_id IN (SELECT user_id FROM profiles WHERE TIMESTAMPDIFF(YEAR, birthday, NOW()) < 10)
ORDER BY id
;

-- Количетво лайков, которые стоят на медиа, принадлежащим пользователям младше 10 лет:

SELECT 
	COUNT(*) as 'likes'
FROM likes 
WHERE media_id IN (
	SELECT id
	FROM media 
	WHERE user_id IN (SELECT user_id FROM profiles WHERE TIMESTAMPDIFF(YEAR, birthday, NOW()) < 10)
)
;

/*-----------------------------------------------------------------------------------------------------*/

/* 3. Определить кто больше поставил лайков (всего): мужчины или женщины.*/

-- Список пользователей - мужчин

SELECT user_id FROM profiles WHERE gender = 'M';

-- Список пользователй - женщин

SELECT user_id FROM profiles WHERE gender = 'F';

-- Число лайков, которые поставили мужчины

SELECT COUNT(*) as 'Mens likes'
FROM likes 
WHERE user_id IN (SELECT user_id FROM profiles WHERE gender = 'M')
;

-- Число лайков, которые поставили женщины

SELECT COUNT(*) as 'Womens likes'
FROM likes 
WHERE user_id IN (SELECT user_id FROM profiles WHERE gender = 'F')
;

-- Сравнение двух чисел и вывод в виде: кто поставил больше лайков(мужчины или женщины) и сколько лайков они поставили

SELECT 
CASE 
	WHEN (SELECT COUNT(*) FROM likes WHERE user_id IN (SELECT user_id FROM profiles WHERE gender = 'M')) > 
	(SELECT COUNT(*) FROM likes WHERE user_id IN (SELECT user_id FROM profiles WHERE gender = 'F')) 
	THEN ' Мужчины'
	ELSE 'Женщины'
	END as 'Больше лайков поставили:',
CASE 
	WHEN (SELECT COUNT(*) FROM likes WHERE user_id IN (SELECT user_id FROM profiles WHERE gender = 'M')) > 
	(SELECT COUNT(*) FROM likes WHERE user_id IN (SELECT user_id FROM profiles WHERE gender = 'F')) 
	THEN (SELECT COUNT(*) FROM likes WHERE user_id IN (SELECT user_id FROM profiles WHERE gender = 'M'))
	ELSE (SELECT COUNT(*) FROM likes WHERE user_id IN (SELECT user_id FROM profiles WHERE gender = 'F'))
	END as 'Количество лайков'
;

/*-----------------------------------------------------------------------------------------------------*/
